<?xml version="1.0"?>

<launch>
    <arg name="model" default="$(find hexapod_scarab)/urdf/hexy_description.xacro"/>
    <arg name="gui" default="false" />
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)"/>
    <param name="use_gui" value="$(arg gui)"/>
    
    <!-- load hexapod mechanical parameters -->
    <rosparam file="$(find hexy_lib)/config/hexy_mechanical_params.yaml" command="load"/>

    <!-- Load controller configuration to parameter server -->
    <rosparam file="$(find dynamixel_control)/config/dynamixel_joint_controllers.yaml" command="load"/>

    <node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                usb2dynamixel_port:
                    port_name: "/dev/ttyUSB0"
                    baud_rate: 1000000
                    min_motor_id: 1
                    max_motor_id: 25
                    update_rate: 40
        </rosparam>
    </node>
    
    <!-- start specified joint controllers -->
    <node name="dynamixel_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
          args="--manager=dxl_manager
                --port=usb2dynamixel_port
                --type=simple
                L1_coxa
                L2_coxa
                L3_coxa
                R1_coxa
                R2_tibia
                R2_femur
                R2_coxa
                R3_coxa"
          output="screen"/>

    <!-- start rviz model -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find hexapod_scarab)/rviz/hexy.rviz" />
    <node name="hexy_joint_publisher" pkg="hexy_joint_publisher" type="joint_publisher"/> 

    <!-- start packages -->
    <node name="leg_inv_kinematic" pkg="leg_inv_kinematic" type="leg_inv_kinematic"/>
    <node name="dynamixel_write" pkg="dynamixel_control" type="dynamixel_write"/>
    <node name="dynamixel_read" pkg="dynamixel_control" type="dynamixel_read" /> 
    <node name="leg_forw_kinematic" pkg="leg_forw_kinematic" type="leg_forw_kinematic"/> 
    <node name="ds4_driver" pkg="ds4_driver" type="ds4_driver_node.py"/>
    <node name="ds4_control" pkg="ds4_control" type="ds4_control"/>
    <node name="geometry_constraints" pkg="geometry_constraints" type="geometry_constraints"/>
</launch>
